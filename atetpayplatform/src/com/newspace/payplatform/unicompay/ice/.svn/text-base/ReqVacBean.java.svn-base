// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `GameWoVacReq.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.newspace.payplatform.unicompay.ice;

public class ReqVacBean implements java.lang.Cloneable, java.io.Serializable
{
	public String sim;

	public String productid;

	public String payproductid;

	public String producttype;

	public String pseudocode;

	public String price;

	public String apid;

	public String applid;

	public String productname;

	public String seq;

	public String signtype;

	public ReqVacBean()
	{
	}

	public ReqVacBean(String sim, String productid, String payproductid, String producttype, String pseudocode, String price, String apid,
			String applid, String productname, String seq, String signtype)
	{
		this.sim = sim;
		this.productid = productid;
		this.payproductid = payproductid;
		this.producttype = producttype;
		this.pseudocode = pseudocode;
		this.price = price;
		this.apid = apid;
		this.applid = applid;
		this.productname = productname;
		this.seq = seq;
		this.signtype = signtype;
	}

	public boolean equals(java.lang.Object rhs)
	{
		if (this == rhs)
		{
			return true;
		}
		ReqVacBean _r = null;
		if (rhs instanceof ReqVacBean)
		{
			_r = (ReqVacBean) rhs;
		}

		if (_r != null)
		{
			if (sim != _r.sim)
			{
				if (sim == null || _r.sim == null || !sim.equals(_r.sim))
				{
					return false;
				}
			}
			if (productid != _r.productid)
			{
				if (productid == null || _r.productid == null || !productid.equals(_r.productid))
				{
					return false;
				}
			}
			if (payproductid != _r.payproductid)
			{
				if (payproductid == null || _r.payproductid == null || !payproductid.equals(_r.payproductid))
				{
					return false;
				}
			}
			if (producttype != _r.producttype)
			{
				if (producttype == null || _r.producttype == null || !producttype.equals(_r.producttype))
				{
					return false;
				}
			}
			if (pseudocode != _r.pseudocode)
			{
				if (pseudocode == null || _r.pseudocode == null || !pseudocode.equals(_r.pseudocode))
				{
					return false;
				}
			}
			if (price != _r.price)
			{
				if (price == null || _r.price == null || !price.equals(_r.price))
				{
					return false;
				}
			}
			if (apid != _r.apid)
			{
				if (apid == null || _r.apid == null || !apid.equals(_r.apid))
				{
					return false;
				}
			}
			if (applid != _r.applid)
			{
				if (applid == null || _r.applid == null || !applid.equals(_r.applid))
				{
					return false;
				}
			}
			if (productname != _r.productname)
			{
				if (productname == null || _r.productname == null || !productname.equals(_r.productname))
				{
					return false;
				}
			}
			if (seq != _r.seq)
			{
				if (seq == null || _r.seq == null || !seq.equals(_r.seq))
				{
					return false;
				}
			}
			if (signtype != _r.signtype)
			{
				if (signtype == null || _r.signtype == null || !signtype.equals(_r.signtype))
				{
					return false;
				}
			}

			return true;
		}

		return false;
	}

	public int hashCode()
	{
		int __h = 5381;
		__h = IceInternal.HashUtil.hashAdd(__h, "::intervac::ReqVacBean");
		__h = IceInternal.HashUtil.hashAdd(__h, sim);
		__h = IceInternal.HashUtil.hashAdd(__h, productid);
		__h = IceInternal.HashUtil.hashAdd(__h, payproductid);
		__h = IceInternal.HashUtil.hashAdd(__h, producttype);
		__h = IceInternal.HashUtil.hashAdd(__h, pseudocode);
		__h = IceInternal.HashUtil.hashAdd(__h, price);
		__h = IceInternal.HashUtil.hashAdd(__h, apid);
		__h = IceInternal.HashUtil.hashAdd(__h, applid);
		__h = IceInternal.HashUtil.hashAdd(__h, productname);
		__h = IceInternal.HashUtil.hashAdd(__h, seq);
		__h = IceInternal.HashUtil.hashAdd(__h, signtype);
		return __h;
	}

	public java.lang.Object clone()
	{
		java.lang.Object o = null;
		try
		{
			o = super.clone();
		}
		catch (CloneNotSupportedException ex)
		{
			assert false; // impossible
		}
		return o;
	}

	public void __write(IceInternal.BasicStream __os)
	{
		__os.writeString(sim);
		__os.writeString(productid);
		__os.writeString(payproductid);
		__os.writeString(producttype);
		__os.writeString(pseudocode);
		__os.writeString(price);
		__os.writeString(apid);
		__os.writeString(applid);
		__os.writeString(productname);
		__os.writeString(seq);
		__os.writeString(signtype);
	}

	public void __read(IceInternal.BasicStream __is)
	{
		sim = __is.readString();
		productid = __is.readString();
		payproductid = __is.readString();
		producttype = __is.readString();
		pseudocode = __is.readString();
		price = __is.readString();
		apid = __is.readString();
		applid = __is.readString();
		productname = __is.readString();
		seq = __is.readString();
		signtype = __is.readString();
	}

	public static final long serialVersionUID = 70883022L;
}
