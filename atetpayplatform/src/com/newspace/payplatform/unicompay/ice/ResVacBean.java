// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `GameWoVacReq.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.newspace.payplatform.unicompay.ice;

public class ResVacBean implements java.lang.Cloneable, java.io.Serializable
{
	public String resultcode;

	public String resultdescription;

	public String seq;

	public String sn;

	public ResVacBean()
	{
	}

	public ResVacBean(String resultcode, String resultdescription, String seq, String sn)
	{
		this.resultcode = resultcode;
		this.resultdescription = resultdescription;
		this.seq = seq;
		this.sn = sn;
	}

	public boolean equals(java.lang.Object rhs)
	{
		if (this == rhs)
		{
			return true;
		}
		ResVacBean _r = null;
		if (rhs instanceof ResVacBean)
		{
			_r = (ResVacBean) rhs;
		}

		if (_r != null)
		{
			if (resultcode != _r.resultcode)
			{
				if (resultcode == null || _r.resultcode == null || !resultcode.equals(_r.resultcode))
				{
					return false;
				}
			}
			if (resultdescription != _r.resultdescription)
			{
				if (resultdescription == null || _r.resultdescription == null || !resultdescription.equals(_r.resultdescription))
				{
					return false;
				}
			}
			if (seq != _r.seq)
			{
				if (seq == null || _r.seq == null || !seq.equals(_r.seq))
				{
					return false;
				}
			}
			if (sn != _r.sn)
			{
				if (sn == null || _r.sn == null || !sn.equals(_r.sn))
				{
					return false;
				}
			}

			return true;
		}

		return false;
	}

	public int hashCode()
	{
		int __h = 5381;
		__h = IceInternal.HashUtil.hashAdd(__h, "::intervac::ResVacBean");
		__h = IceInternal.HashUtil.hashAdd(__h, resultcode);
		__h = IceInternal.HashUtil.hashAdd(__h, resultdescription);
		__h = IceInternal.HashUtil.hashAdd(__h, seq);
		__h = IceInternal.HashUtil.hashAdd(__h, sn);
		return __h;
	}

	public java.lang.Object clone()
	{
		java.lang.Object o = null;
		try
		{
			o = super.clone();
		}
		catch (CloneNotSupportedException ex)
		{
			assert false; // impossible
		}
		return o;
	}

	public void __write(IceInternal.BasicStream __os)
	{
		__os.writeString(resultcode);
		__os.writeString(resultdescription);
		__os.writeString(seq);
		__os.writeString(sn);
	}

	public void __read(IceInternal.BasicStream __is)
	{
		resultcode = __is.readString();
		resultdescription = __is.readString();
		seq = __is.readString();
		sn = __is.readString();
	}

	public static final long serialVersionUID = -1530943406L;
}
