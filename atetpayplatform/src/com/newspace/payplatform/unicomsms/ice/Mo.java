// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `SmInt.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.newspace.payplatform.unicomsms.ice;

public class Mo implements java.lang.Cloneable, java.io.Serializable
{
	public String strGWID;

	public String strUserNumber;

	public String strServiceNumber;

	public byte cPID;

	public byte cUDHI;

	public byte cMsgFormat;

	public int lMsgLen;

	public byte[] strMsgContent;

	public String strReserve;

	public Mo()
	{
	}

	public Mo(String strGWID, String strUserNumber, String strServiceNumber, byte cPID, byte cUDHI, byte cMsgFormat, int lMsgLen,
			byte[] strMsgContent, String strReserve)
	{
		this.strGWID = strGWID;
		this.strUserNumber = strUserNumber;
		this.strServiceNumber = strServiceNumber;
		this.cPID = cPID;
		this.cUDHI = cUDHI;
		this.cMsgFormat = cMsgFormat;
		this.lMsgLen = lMsgLen;
		this.strMsgContent = strMsgContent;
		this.strReserve = strReserve;
	}

	public boolean equals(java.lang.Object rhs)
	{
		if (this == rhs)
		{
			return true;
		}
		Mo _r = null;
		if (rhs instanceof Mo)
		{
			_r = (Mo) rhs;
		}

		if (_r != null)
		{
			if (strGWID != _r.strGWID)
			{
				if (strGWID == null || _r.strGWID == null || !strGWID.equals(_r.strGWID))
				{
					return false;
				}
			}
			if (strUserNumber != _r.strUserNumber)
			{
				if (strUserNumber == null || _r.strUserNumber == null || !strUserNumber.equals(_r.strUserNumber))
				{
					return false;
				}
			}
			if (strServiceNumber != _r.strServiceNumber)
			{
				if (strServiceNumber == null || _r.strServiceNumber == null || !strServiceNumber.equals(_r.strServiceNumber))
				{
					return false;
				}
			}
			if (cPID != _r.cPID)
			{
				return false;
			}
			if (cUDHI != _r.cUDHI)
			{
				return false;
			}
			if (cMsgFormat != _r.cMsgFormat)
			{
				return false;
			}
			if (lMsgLen != _r.lMsgLen)
			{
				return false;
			}
			if (!java.util.Arrays.equals(strMsgContent, _r.strMsgContent))
			{
				return false;
			}
			if (strReserve != _r.strReserve)
			{
				if (strReserve == null || _r.strReserve == null || !strReserve.equals(_r.strReserve))
				{
					return false;
				}
			}

			return true;
		}

		return false;
	}

	public int hashCode()
	{
		int __h = 5381;
		__h = IceInternal.HashUtil.hashAdd(__h, "::SmModule::Mo");
		__h = IceInternal.HashUtil.hashAdd(__h, strGWID);
		__h = IceInternal.HashUtil.hashAdd(__h, strUserNumber);
		__h = IceInternal.HashUtil.hashAdd(__h, strServiceNumber);
		__h = IceInternal.HashUtil.hashAdd(__h, cPID);
		__h = IceInternal.HashUtil.hashAdd(__h, cUDHI);
		__h = IceInternal.HashUtil.hashAdd(__h, cMsgFormat);
		__h = IceInternal.HashUtil.hashAdd(__h, lMsgLen);
		__h = IceInternal.HashUtil.hashAdd(__h, strMsgContent);
		__h = IceInternal.HashUtil.hashAdd(__h, strReserve);
		return __h;
	}

	public java.lang.Object clone()
	{
		java.lang.Object o = null;
		try
		{
			o = super.clone();
		}
		catch (CloneNotSupportedException ex)
		{
			assert false; // impossible
		}
		return o;
	}

	public void __write(IceInternal.BasicStream __os)
	{
		__os.writeString(strGWID);
		__os.writeString(strUserNumber);
		__os.writeString(strServiceNumber);
		__os.writeByte(cPID);
		__os.writeByte(cUDHI);
		__os.writeByte(cMsgFormat);
		__os.writeInt(lMsgLen);
		strConentSeqHelper.write(__os, strMsgContent);
		__os.writeString(strReserve);
	}

	public void __read(IceInternal.BasicStream __is)
	{
		strGWID = __is.readString();
		strUserNumber = __is.readString();
		strServiceNumber = __is.readString();
		cPID = __is.readByte();
		cUDHI = __is.readByte();
		cMsgFormat = __is.readByte();
		lMsgLen = __is.readInt();
		strMsgContent = strConentSeqHelper.read(__is);
		strReserve = __is.readString();
	}

	public static final long serialVersionUID = -268421192L;
}
